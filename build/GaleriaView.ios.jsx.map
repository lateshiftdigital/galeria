{"version":3,"file":"GaleriaView.ios.jsx","sourceRoot":"","sources":["../src/GaleriaView.ios.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,wBAAwB,EAAE,MAAM,mBAAmB,CAAA;AAG5D,OAAO,EAAE,UAAU,EAAE,MAAM,OAAO,CAAA;AAClC,OAAO,EAAE,cAAc,EAAE,MAAM,WAAW,CAAA;AAC1C,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAA;AAEpC,MAAM,WAAW,GAAG,wBAAwB,CAK1C,SAAS,CAAC,CAAA;AAEZ,MAAM,KAAK,GAAG,EAAE,CAAA;AAChB,MAAM,IAAI,GAAG,GAAG,EAAE,GAAE,CAAC,CAAA;AAErB,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAC3B,SAAS,OAAO,CAAC,EACf,QAAQ,EACR,IAAI,EACJ,KAAK,GAAG,MAAM,EACd,GAAG,GAGsD;IACzD,OAAO,CACL,CAAC,cAAc,CAAC,QAAQ,CACtB,KAAK,CAAC,CAAC;YACL,IAAI;YACJ,KAAK;YACL,YAAY,EAAE,CAAC;YACf,IAAI,EAAE,KAAK;YACX,GAAG,EAAE,EAAE;YACP,OAAO,EAAE,IAAI;YACb,GAAG;SACJ,CAAC,CAEF;QAAA,CAAC,QAAQ,CACX;MAAA,EAAE,cAAc,CAAC,QAAQ,CAAC,CAC3B,CAAA;AACH,CAAC,EACD;IACE,KAAK,CAAC,KAAuB;QAC3B,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,YAAY,EAAE,GAAG,UAAU,CAAC,cAAc,CAAC,CAAA;QAChE,OAAO,CACL,CAAC,WAAW,CACV,KAAK,CAAC,CAAC,KAAK,CAAC,CACb,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;gBACtB,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,CAAC;oBAC5B,OAAO,GAAG,CAAA;gBACZ,CAAC;gBAED,OAAO,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAA;YAC1C,CAAC,CAAC,CAAC,CACH,KAAK,CAAC,CAAC,YAAY,CAAC,CACpB,IAAI,KAAK,CAAC,EACV,CACH,CAAA;IACH,CAAC;IACD,KAAK,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,CAEhB;CACH,CACF,CAAA;AAED,eAAe,OAAO,CAAA","sourcesContent":["import { requireNativeViewManager } from 'expo-modules-core'\n\nimport { GaleriaViewProps } from './Galeria.types'\nimport { useContext } from 'react'\nimport { GaleriaContext } from './context'\nimport { Image } from 'react-native'\n\nconst NativeImage = requireNativeViewManager<\n  GaleriaViewProps & {\n    urls?: string[]\n    theme: 'dark' | 'light'\n  }\n>('Galeria')\n\nconst array = []\nconst noop = () => {}\n\nconst Galeria = Object.assign(\n  function Galeria({\n    children,\n    urls,\n    theme = 'dark',\n    ids,\n  }: {\n    children: React.ReactNode\n  } & Partial<Pick<GaleriaContext, 'theme' | 'ids' | 'urls'>>) {\n    return (\n      <GaleriaContext.Provider\n        value={{\n          urls,\n          theme,\n          initialIndex: 0,\n          open: false,\n          src: '',\n          setOpen: noop,\n          ids,\n        }}\n      >\n        {children}\n      </GaleriaContext.Provider>\n    )\n  },\n  {\n    Image(props: GaleriaViewProps) {\n      const { theme, urls, initialIndex } = useContext(GaleriaContext)\n      return (\n        <NativeImage\n          theme={theme}\n          urls={urls?.map((url) => {\n            if (typeof url === 'string') {\n              return url\n            }\n\n            return Image.resolveAssetSource(url).uri\n          })}\n          index={initialIndex}\n          {...props}\n        />\n      )\n    },\n    Popup: (() => null) as React.FC<{\n      disableTransition?: 'web'\n    }>,\n  },\n)\n\nexport default Galeria\n"]}